// Place your key bindings in this file to override the defaults
[
    {
        "key": "shift+A",
        "command": "macros.vimShiftA",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "h",
        "command": "macros.openLineBelow",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "h",
        "command": "macros.openLineBelow",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "shift+o",
        "command": "macros.openLineAbove",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "shift+space",
        "command": "cursorPageUp",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+i ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+i ctrl+f",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+o",
        "command": "file-browser.open"
    },
    {
        "key": "ctrl+b",
        "command": "file-browser.stepOut",
        "when": "inFileBrowser"
    },
    {
        "key": "ctrl+f",
        "command": "file-browser.stepIn",
        "when": "inFileBrowser"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    
    // Window control
    {
        "key": "ctrl+w /",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+w 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+w \\",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+w n",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+k cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+w e",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+k cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+w o",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+k cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+w y",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+k cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups && !terminal.active"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+w shift+o",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+w tab",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+w ctrl+d",
        "command": "workbench.action.closeEditorsAndGroup"
    },
    {
        "key": "ctrl+w p",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },


    // Magit setup
    {
        "key": "alt+x g",
        "command": "-magit.status"
    },
    {
        "key": "tab",
        "command": "extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "k",
        "command": "magit.discard-at-point",
        "when": "editorTextFocus && editorLangId == 'magit'"
    },
    {
        "key": "x",
        "command": "magit.discard-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "-",
        "command": "magit.reverse-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "v",
        "command": "-magit.reverse-at-point"
    },
    {
        "key": "shift+-",
        "command": "magit.reverting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+v",
        "command": "-magit.reverting"
    },
    {
        "key": "shift+o",
        "command": "magit.resetting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
    },
    {
        "key": "shift+x",
        "command": "-magit.resetting"
    },
    {
        "key": "x",
        "command": "-magit.reset-mixed"
    },
    {
        "key": "ctrl+u x",
        "command": "-magit.reset-hard"
    },
    {
        "key": "ctrl+i m",
        "command": "magit.status"
    },
    {
        "key": "ctrl+m i",
        "command": "merge-conflict.accept.incoming"
    },


    // Terminal setup

    {
        "key": "ctrl+w `",
        "command": "workbench.action.terminal.toggleTerminal",
    },
    {
        "key": "ctrl+w =",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w /",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w o",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus || problemFocus"
    },
    {
        "key": "ctrl+w e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus || problemFocus"
    },
    {
        "key": "ctrl+w y",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus || problemFocus"
    },
    {
        "key": "ctrl+w n",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus || problemFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.terminal.resizePaneLeft"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.terminal.resizePaneRight"
    },
]